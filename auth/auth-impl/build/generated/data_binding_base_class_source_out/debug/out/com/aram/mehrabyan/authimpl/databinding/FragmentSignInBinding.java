// Generated by view binder compiler. Do not edit!
package com.aram.mehrabyan.authimpl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aram.mehrabyan.authimpl.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView btnOpenRegister;

  @NonNull
  public final AppCompatButton btnSignIn;

  @NonNull
  public final TextInputLayout emailInputLayout;

  @NonNull
  public final TextInputEditText etEmailInput;

  @NonNull
  public final TextInputEditText etPasswordInput;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  private FragmentSignInBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatTextView btnOpenRegister, @NonNull AppCompatButton btnSignIn,
      @NonNull TextInputLayout emailInputLayout, @NonNull TextInputEditText etEmailInput,
      @NonNull TextInputEditText etPasswordInput, @NonNull TextInputLayout passwordInputLayout) {
    this.rootView = rootView;
    this.btnOpenRegister = btnOpenRegister;
    this.btnSignIn = btnSignIn;
    this.emailInputLayout = emailInputLayout;
    this.etEmailInput = etEmailInput;
    this.etPasswordInput = etPasswordInput;
    this.passwordInputLayout = passwordInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_open_register;
      AppCompatTextView btnOpenRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnOpenRegister == null) {
        break missingId;
      }

      id = R.id.btn_sign_in;
      AppCompatButton btnSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btnSignIn == null) {
        break missingId;
      }

      id = R.id.email_input_layout;
      TextInputLayout emailInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailInputLayout == null) {
        break missingId;
      }

      id = R.id.et_email_input;
      TextInputEditText etEmailInput = ViewBindings.findChildViewById(rootView, id);
      if (etEmailInput == null) {
        break missingId;
      }

      id = R.id.et_password_input;
      TextInputEditText etPasswordInput = ViewBindings.findChildViewById(rootView, id);
      if (etPasswordInput == null) {
        break missingId;
      }

      id = R.id.password_input_layout;
      TextInputLayout passwordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputLayout == null) {
        break missingId;
      }

      return new FragmentSignInBinding((ConstraintLayout) rootView, btnOpenRegister, btnSignIn,
          emailInputLayout, etEmailInput, etPasswordInput, passwordInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
